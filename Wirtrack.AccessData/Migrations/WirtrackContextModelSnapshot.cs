// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wirtrack.AccessData;

namespace Wirtrack.AccessData.Migrations
{
    [DbContext(typeof(WirtrackContext))]
    partial class WirtrackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wirtrack.Domain.Entities.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7326),
                            Name = "Palermo"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7382),
                            Name = "Belgrano"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7385),
                            Name = "Balvanera"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7387),
                            Name = "Retiro"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7390),
                            Name = "Avellaneda"
                        },
                        new
                        {
                            Id = 6,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7392),
                            Name = "Quilmes"
                        },
                        new
                        {
                            Id = 7,
                            CountryCode = "AR",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(7395),
                            Name = "Berazategui"
                        });
                });

            modelBuilder.Entity("Wirtrack.Domain.Entities.Trips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTrip")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDestinationCity")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdVehicle")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDestinationCity");

                    b.HasIndex("IdVehicle");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTrip = new DateTime(2022, 9, 13, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 1,
                            IdStatus = 1,
                            IdVehicle = 1,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9211)
                        },
                        new
                        {
                            Id = 2,
                            DateTrip = new DateTime(2022, 9, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 3,
                            IdStatus = 1,
                            IdVehicle = 2,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9278)
                        },
                        new
                        {
                            Id = 3,
                            DateTrip = new DateTime(2022, 9, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 4,
                            IdStatus = 1,
                            IdVehicle = 2,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9281)
                        },
                        new
                        {
                            Id = 4,
                            DateTrip = new DateTime(2022, 9, 16, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 1,
                            IdStatus = 1,
                            IdVehicle = 3,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9284)
                        },
                        new
                        {
                            Id = 5,
                            DateTrip = new DateTime(2022, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 5,
                            IdStatus = 1,
                            IdVehicle = 3,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9287)
                        },
                        new
                        {
                            Id = 6,
                            DateTrip = new DateTime(2022, 9, 18, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 1,
                            IdStatus = 1,
                            IdVehicle = 2,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9290)
                        },
                        new
                        {
                            Id = 7,
                            DateTrip = new DateTime(2022, 9, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDestinationCity = 1,
                            IdStatus = 1,
                            IdVehicle = 1,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 466, DateTimeKind.Utc).AddTicks(9293)
                        });
                });

            modelBuilder.Entity("Wirtrack.Domain.Entities.Vehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarLicense")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarLicense = "AAA000",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 465, DateTimeKind.Utc).AddTicks(3376),
                            Model = "Peugeot 208",
                            Type = "car"
                        },
                        new
                        {
                            Id = 2,
                            CarLicense = "AAA001",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 465, DateTimeKind.Utc).AddTicks(3760),
                            Model = "Mercedes Benz",
                            Type = "truck"
                        },
                        new
                        {
                            Id = 3,
                            CarLicense = "AAA002",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 9, 11, 14, 1, 12, 465, DateTimeKind.Utc).AddTicks(3770),
                            Model = "Honda CG 125",
                            Type = "motorcycle"
                        });
                });

            modelBuilder.Entity("Wirtrack.Domain.Entities.Trips", b =>
                {
                    b.HasOne("Wirtrack.Domain.Entities.Cities", "Cities")
                        .WithMany("Trips")
                        .HasForeignKey("IdDestinationCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wirtrack.Domain.Entities.Vehicles", "Vehicle")
                        .WithMany("Trips")
                        .HasForeignKey("IdVehicle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cities");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Wirtrack.Domain.Entities.Cities", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Wirtrack.Domain.Entities.Vehicles", b =>
                {
                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
